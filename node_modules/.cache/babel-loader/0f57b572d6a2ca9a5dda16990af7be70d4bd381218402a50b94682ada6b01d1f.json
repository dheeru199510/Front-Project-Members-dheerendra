{"ast":null,"code":"var _jsxFileName = \"/home/dell/project/task-management-app/src/pages/TaskPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { TaskContext } from '../context/TaskContext';\nimport './TaskPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    tasks,\n    editTask,\n    deleteTask\n  } = useContext(TaskContext);\n  const navigate = useNavigate();\n  const task = tasks.find(t => t.id === parseInt(id));\n  const [editMode, setEditMode] = useState(false);\n  const [taskText, setTaskText] = useState((task === null || task === void 0 ? void 0 : task.todo) || '');\n  const [taskStatus, setTaskStatus] = useState((task === null || task === void 0 ? void 0 : task.status) || 'To Do'); // New state for task status\n\n  // Handle task status change\n  const handleStatusChange = newStatus => {\n    setTaskStatus(newStatus);\n    // Update the task with the new status locally\n    editTask({\n      id: task.id,\n      todo: taskText,\n      completed: newStatus === 'Done',\n      status: newStatus,\n      userId: task.userId\n    });\n  };\n  const handleEdit = () => {\n    // Save the edited task locally\n    editTask({\n      id: task.id,\n      todo: taskText,\n      completed: taskStatus === 'Done',\n      status: taskStatus,\n      userId: task.userId\n    });\n    setEditMode(false);\n  };\n  const handleDelete = () => {\n    // Delete the task and navigate to home page\n    deleteTask(task.id);\n    navigate('/'); // Redirect to home after deletion\n  };\n  if (!task) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Task not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-columns\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Title :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), \" \", editMode ? 'Edit Task' : task.todo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: taskText,\n          onChange: e => setTaskText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEdit,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Status: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), taskStatus]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"w-25\",\n          value: taskStatus,\n          onChange: e => handleStatusChange(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"To Do\",\n            children: \"To Do\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"In Progress\",\n            children: \"In Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Done\",\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          class: \"btn btn-primary  w-25 text-center\",\n          onClick: () => setEditMode(!editMode),\n          children: editMode ? 'Cancel' : 'Edit Task'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          class: \"btn btn-danger w-25 text-center\",\n          onClick: handleDelete,\n          children: \"Delete Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskPage, \"D89nfcdoHXq7F7yIcR59MkgEsX8=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = TaskPage;\nexport default TaskPage;\nvar _c;\n$RefreshReg$(_c, \"TaskPage\");","map":{"version":3,"names":["React","useState","useContext","useParams","useNavigate","TaskContext","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskPage","_s","id","tasks","editTask","deleteTask","navigate","task","find","t","parseInt","editMode","setEditMode","taskText","setTaskText","todo","taskStatus","setTaskStatus","status","handleStatusChange","newStatus","completed","userId","handleEdit","handleDelete","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","value","onChange","e","target","onClick","class","_c","$RefreshReg$"],"sources":["/home/dell/project/task-management-app/src/pages/TaskPage.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { TaskContext } from '../context/TaskContext';\nimport './TaskPage.css';\n\nconst TaskPage = () => {\n  const { id } = useParams();\n  const { tasks, editTask, deleteTask } = useContext(TaskContext);\n  const navigate = useNavigate();\n\n  const task = tasks.find((t) => t.id === parseInt(id));\n\n  const [editMode, setEditMode] = useState(false);\n  const [taskText, setTaskText] = useState(task?.todo || '');\n  const [taskStatus, setTaskStatus] = useState(task?.status || 'To Do'); // New state for task status\n\n  // Handle task status change\n  const handleStatusChange = (newStatus) => {\n    setTaskStatus(newStatus);\n    // Update the task with the new status locally\n    editTask({ id: task.id, todo: taskText, completed: newStatus === 'Done', status: newStatus, userId: task.userId });\n  };\n\n  const handleEdit = () => {\n    // Save the edited task locally\n    editTask({ id: task.id, todo: taskText, completed: taskStatus === 'Done', status: taskStatus, userId: task.userId });\n    setEditMode(false);\n  };\n\n  const handleDelete = () => {\n    // Delete the task and navigate to home page\n    deleteTask(task.id);\n    navigate('/'); // Redirect to home after deletion\n  };\n\n  if (!task) return <div>Task not found</div>;\n\n  return (\n    <div className=\"task-container\">\n      <div className=\"task-columns\">\n        <p> <b>Title :</b> {editMode ? 'Edit Task' : task.todo}</p>\n        {editMode ? (\n          <div>\n            <input\n              type=\"text\"\n              value={taskText}\n              onChange={(e) => setTaskText(e.target.value)}\n            />\n            <button onClick={handleEdit}>Save</button>\n          </div>\n        ) : (\n          <>\n            <p> <b>Status: </b>{taskStatus}</p>\n            {/* Dropdown to move between statuses */}\n            <select className='w-25' value={taskStatus} onChange={(e) => handleStatusChange(e.target.value)}>\n              <option value=\"To Do\">To Do</option>\n              <option value=\"In Progress\">In Progress</option>\n              <option value=\"Done\">Done</option>\n            </select>\n          </>\n        )}\n        <div className='task-buttons'>\n          <button type=\"button\" class=\"btn btn-primary  w-25 text-center\" onClick={() => setEditMode(!editMode)}>\n            {editMode ? 'Cancel' : 'Edit Task'}\n          </button>\n          <button type=\"button\" class=\"btn btn-danger w-25 text-center\" onClick={handleDelete}>Delete Task</button>\n        </div>\n\n      </div>\n    </div>\n  );\n};\n\nexport default TaskPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}