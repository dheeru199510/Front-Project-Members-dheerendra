{"ast":null,"code":"var _jsxFileName = \"/home/dell/project/task-management-app/src/pages/TaskPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { TaskContext } from '../context/TaskContext';\nimport './TaskPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    tasks,\n    editTask,\n    deleteTask\n  } = useContext(TaskContext);\n  const navigate = useNavigate();\n  const task = tasks.find(t => t.id === parseInt(id));\n  const [editMode, setEditMode] = useState(false);\n  const [taskText, setTaskText] = useState((task === null || task === void 0 ? void 0 : task.todo) || '');\n  const [taskStatus, setTaskStatus] = useState((task === null || task === void 0 ? void 0 : task.status) || 'To Do'); // New state for task status\n\n  // Handle task status change\n  const handleStatusChange = newStatus => {\n    setTaskStatus(newStatus);\n    // Update the task with the new status locally\n    editTask({\n      id: task.id,\n      todo: taskText,\n      completed: newStatus === 'Done',\n      status: newStatus,\n      userId: task.userId\n    });\n  };\n  const handleEdit = () => {\n    // Save the edited task locally\n    editTask({\n      id: task.id,\n      todo: taskText,\n      completed: taskStatus === 'Done',\n      status: taskStatus,\n      userId: task.userId\n    });\n    setEditMode(false);\n  };\n  const handleDelete = () => {\n    // Delete the task and navigate to home page\n    deleteTask(task.id);\n    navigate('/'); // Redirect to home after deletion\n  };\n  if (!task) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Task not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: editMode ? 'Edit Task' : task.todo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: taskText,\n        onChange: e => setTaskText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEdit,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", taskStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: taskStatus,\n        onChange: e => handleStatusChange(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"To Do\",\n          children: \"To Do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"In Progress\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Done\",\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setEditMode(!editMode),\n      children: editMode ? 'Cancel' : 'Edit Task'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDelete,\n      children: \"Delete Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskPage, \"D89nfcdoHXq7F7yIcR59MkgEsX8=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = TaskPage;\nexport default TaskPage;\nvar _c;\n$RefreshReg$(_c, \"TaskPage\");","map":{"version":3,"names":["React","useState","useContext","useParams","useNavigate","TaskContext","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskPage","_s","id","tasks","editTask","deleteTask","navigate","task","find","t","parseInt","editMode","setEditMode","taskText","setTaskText","todo","taskStatus","setTaskStatus","status","handleStatusChange","newStatus","completed","userId","handleEdit","handleDelete","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/dell/project/task-management-app/src/pages/TaskPage.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { TaskContext } from '../context/TaskContext';\nimport './TaskPage.css';\n\nconst TaskPage = () => {\n  const { id } = useParams();\n  const { tasks, editTask, deleteTask } = useContext(TaskContext);\n  const navigate = useNavigate();\n\n  const task = tasks.find((t) => t.id === parseInt(id));\n\n  const [editMode, setEditMode] = useState(false);\n  const [taskText, setTaskText] = useState(task?.todo || '');\n  const [taskStatus, setTaskStatus] = useState(task?.status || 'To Do'); // New state for task status\n\n  // Handle task status change\n  const handleStatusChange = (newStatus) => {\n    setTaskStatus(newStatus);\n    // Update the task with the new status locally\n    editTask({ id: task.id, todo: taskText, completed: newStatus === 'Done', status: newStatus, userId: task.userId });\n  };\n\n  const handleEdit = () => {\n    // Save the edited task locally\n    editTask({ id: task.id, todo: taskText, completed: taskStatus === 'Done', status: taskStatus, userId: task.userId });\n    setEditMode(false);\n  };\n\n  const handleDelete = () => {\n    // Delete the task and navigate to home page\n    deleteTask(task.id);\n    navigate('/'); // Redirect to home after deletion\n  };\n\n  if (!task) return <div>Task not found</div>;\n\n  return (\n    <div>\n      <h1>{editMode ? 'Edit Task' : task.todo}</h1>\n      {editMode ? (\n        <div>\n          <input\n            type=\"text\"\n            value={taskText}\n            onChange={(e) => setTaskText(e.target.value)}\n          />\n          <button onClick={handleEdit}>Save</button>\n        </div>\n      ) : (\n        <>\n          <p>Status: {taskStatus}</p>\n          {/* Dropdown to move between statuses */}\n          <select value={taskStatus} onChange={(e) => handleStatusChange(e.target.value)}>\n            <option value=\"To Do\">To Do</option>\n            <option value=\"In Progress\">In Progress</option>\n            <option value=\"Done\">Done</option>\n          </select>\n        </>\n      )}\n      <button onClick={() => setEditMode(!editMode)}>\n        {editMode ? 'Cancel' : 'Edit Task'}\n      </button>\n      <button onClick={handleDelete}>Delete Task</button>\n    </div>\n  );\n};\n\nexport default TaskPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}