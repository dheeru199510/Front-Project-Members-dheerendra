{"ast":null,"code":"var _jsxFileName = \"/home/dell/project/task-management-app/src/App.js\";\nimport React, { useContext } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Home from './pages/Home';\nimport TaskPage from './pages/TaskPage';\nimport Header from './components/Header';\nimport { TaskContext } from './context/TaskContext';\nimport { TaskProvider } from './context/TaskContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // const  tasks  = useContext(TaskContext);\n  // console.log(tasks)\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TaskProvider, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useContext","BrowserRouter","Router","Route","Routes","Home","TaskPage","Header","TaskContext","TaskProvider","jsxDEV","_jsxDEV","Fragment","_Fragment","App","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/dell/project/task-management-app/src/App.js"],"sourcesContent":["\nimport React ,{useContext} from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Home from './pages/Home';\nimport TaskPage from './pages/TaskPage';\nimport Header from './components/Header';\nimport { TaskContext } from './context/TaskContext';\nimport { TaskProvider } from './context/TaskContext';\n\n\nfunction App() {\n  // const  tasks  = useContext(TaskContext);\n  // console.log(tasks)\n  return (\n    <>\n    <Header></Header>\n    <TaskProvider> {/* Wrapping App in TaskProvider */}\n      <Home></Home>\n    </TaskProvider>\n     {/* <Router>\n     <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/task/:id\" element={<TaskPage />} />\n      </Routes>\n    </Router> */}\n    </>\n    \n  );\n}\n\nexport default App;"],"mappings":";AACA,OAAOA,KAAK,IAAGC,UAAU,QAAO,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,YAAY,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGrD,SAASC,GAAGA,CAAA,EAAG;EACb;EACA;EACA,oBACEH,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBACAJ,OAAA,CAACJ,MAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eACjBR,OAAA,CAACF,YAAY;MAAAM,QAAA,GAAC,GAAC,eACbJ,OAAA,CAACN,IAAI;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA,eAOb,CAAC;AAGP;AAACC,EAAA,GAlBQN,GAAG;AAoBZ,eAAeA,GAAG;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}