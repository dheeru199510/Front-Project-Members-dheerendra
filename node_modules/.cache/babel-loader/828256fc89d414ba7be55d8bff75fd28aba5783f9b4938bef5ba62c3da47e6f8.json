{"ast":null,"code":"var _jsxFileName = \"/home/dell/project/task-management-app/src/pages/TaskPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { TaskContext } from '../context/TaskContext';\nimport './TaskPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    tasks,\n    editTask,\n    deleteTask\n  } = useContext(TaskContext);\n  const navigate = useNavigate();\n  ;\n  const task = tasks.find(t => t.id === parseInt(id));\n  const [editMode, setEditMode] = useState(false);\n  const [taskText, setTaskText] = useState((task === null || task === void 0 ? void 0 : task.todo) || '');\n  const handleEdit = () => {\n    editTask({\n      id: task.id,\n      todo: taskText,\n      completed: task.completed,\n      userId: task.userId\n    });\n    setEditMode(false);\n  };\n  const handleDelete = () => {\n    deleteTask(task.id);\n    navigate('/'); // Redirect to home after deletion\n  };\n  if (!task) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Task not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: editMode ? 'Edit Task' : task.todo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: taskText,\n        onChange: e => setTaskText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEdit,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", task.completed ? 'Done' : 'To Do']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setEditMode(!editMode),\n      children: editMode ? 'Cancel' : 'Edit Task'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDelete,\n      children: \"Delete Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskPage, \"Mgv5M6O0pHQHxnzPZvokTH27Bfw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = TaskPage;\nexport default TaskPage;\nvar _c;\n$RefreshReg$(_c, \"TaskPage\");","map":{"version":3,"names":["React","useState","useContext","useParams","useNavigate","TaskContext","jsxDEV","_jsxDEV","TaskPage","_s","id","tasks","editTask","deleteTask","navigate","task","find","t","parseInt","editMode","setEditMode","taskText","setTaskText","todo","handleEdit","completed","userId","handleDelete","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/dell/project/task-management-app/src/pages/TaskPage.js"],"sourcesContent":["\nimport React, { useState, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { TaskContext } from '../context/TaskContext';\nimport './TaskPage.css';\n\nconst TaskPage = () => {\n  const { id } = useParams();\n  const { tasks, editTask, deleteTask } = useContext(TaskContext);\n  const navigate = useNavigate();;\n\n  const task = tasks.find((t) => t.id === parseInt(id));\n\n  const [editMode, setEditMode] = useState(false);\n  const [taskText, setTaskText] = useState(task?.todo || '');\n\n  const handleEdit = () => {\n    editTask({ id: task.id, todo: taskText, completed: task.completed, userId: task.userId });\n    setEditMode(false);\n  };\n\n  const handleDelete = () => {\n    deleteTask(task.id);\n    navigate('/'); // Redirect to home after deletion\n  };\n\n  if (!task) return <div>Task not found</div>;\n\n  return (\n    <div>\n      <h1>{editMode ? 'Edit Task' : task.todo}</h1>\n      {editMode ? (\n        <div>\n          <input\n            type=\"text\"\n            value={taskText}\n            onChange={(e) => setTaskText(e.target.value)}\n          />\n          <button onClick={handleEdit}>Save</button>\n        </div>\n      ) : (\n        <p>Status: {task.completed ? 'Done' : 'To Do'}</p>\n      )}\n      <button onClick={() => setEditMode(!editMode)}>\n        {editMode ? 'Cancel' : 'Edit Task'}\n      </button>\n      <button onClick={handleDelete}>Delete Task</button>\n    </div>\n  );\n};\n\nexport default TaskPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}